{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./file.service\";\nexport class DataService {\n  constructor(fileService) {\n    this.fileService = fileService;\n    this.hasValue = false;\n    this.obj = {};\n    this.saveYData = (xIndex, yIndex, xdata, ydata) => {\n      this.hasValue = true;\n      if (!this.obj[xIndex]) this.obj[xIndex] = {\n        data: xdata\n      };\n      const entries = this.obj[xIndex];\n      entries[yIndex] = ydata;\n      console.log(this.obj);\n    };\n    this.saveFinal = () => {\n      const finalobj = {};\n      for (const [key, value] of Object.entries(this.obj)) {\n        const xkeys = \"X\" + key + \"-\" + value[\"data\"];\n        finalobj[xkeys] = [];\n        for (const [k, v] of Object.entries(value)) {\n          if (k !== \"data\") {\n            finalobj[xkeys].push(v);\n          }\n        }\n      }\n      console.log(JSON.stringify(finalobj));\n      this.fileService.saveToFile(finalobj);\n      console.log(finalobj);\n    };\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.FileService));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac\n});","map":{"version":3,"names":["DataService","constructor","fileService","hasValue","obj","saveYData","xIndex","yIndex","xdata","ydata","data","entries","console","log","saveFinal","finalobj","key","value","Object","xkeys","k","v","push","JSON","stringify","saveToFile","i0","ɵɵinject","i1","FileService","factory","ɵfac"],"sources":["/home/sakthi/Music/Solution134/src/app/services/data.service.ts"],"sourcesContent":["// Assuming other import statements are accurate\nimport { FileService } from \"./file.service\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable()\nexport class DataService {\n  hasValue: boolean = false;\n  obj: { [key: string]: { data: string; [key: string]: string } } = {};\n\n  constructor(private fileService: FileService) {}\n\n  saveYData = (\n    xIndex: string,\n    yIndex: string,\n    xdata: string,\n    ydata: string\n  ) => {\n    this.hasValue = true;\n    if (!this.obj[xIndex]) this.obj[xIndex] = { data: xdata };\n    const entries = this.obj[xIndex];\n    entries[yIndex] = ydata;\n    console.log(this.obj);\n  };\n\n  saveFinal = () => {\n    const finalobj: { [key: string]: string[] } = {};\n\n    for (const [key, value] of Object.entries(this.obj)) {\n      const xkeys = \"X\" + key + \"-\" + value[\"data\"];\n      finalobj[xkeys] = [];\n      for (const [k, v] of Object.entries(value)) {\n        if (k !== \"data\") {\n          finalobj[xkeys].push(v);\n        }\n      }\n    }\n    console.log(JSON.stringify(finalobj));\n    this.fileService.saveToFile(finalobj);\n\n    console.log(finalobj);\n  };\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,QAAQ,GAAY,KAAK;IACzB,KAAAC,GAAG,GAA+D,EAAE;IAIpE,KAAAC,SAAS,GAAG,CACVC,MAAc,EACdC,MAAc,EACdC,KAAa,EACbC,KAAa,KACX;MACF,IAAI,CAACN,QAAQ,GAAG,IAAI;MACpB,IAAI,CAAC,IAAI,CAACC,GAAG,CAACE,MAAM,CAAC,EAAE,IAAI,CAACF,GAAG,CAACE,MAAM,CAAC,GAAG;QAAEI,IAAI,EAAEF;MAAK,CAAE;MACzD,MAAMG,OAAO,GAAG,IAAI,CAACP,GAAG,CAACE,MAAM,CAAC;MAChCK,OAAO,CAACJ,MAAM,CAAC,GAAGE,KAAK;MACvBG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,GAAG,CAAC;IACvB,CAAC;IAED,KAAAU,SAAS,GAAG,MAAK;MACf,MAAMC,QAAQ,GAAgC,EAAE;MAEhD,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACP,OAAO,CAAC,IAAI,CAACP,GAAG,CAAC,EAAE;QACnD,MAAMe,KAAK,GAAG,GAAG,GAAGH,GAAG,GAAG,GAAG,GAAGC,KAAK,CAAC,MAAM,CAAC;QAC7CF,QAAQ,CAACI,KAAK,CAAC,GAAG,EAAE;QACpB,KAAK,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,IAAIH,MAAM,CAACP,OAAO,CAACM,KAAK,CAAC,EAAE;UAC1C,IAAIG,CAAC,KAAK,MAAM,EAAE;YAChBL,QAAQ,CAACI,KAAK,CAAC,CAACG,IAAI,CAACD,CAAC,CAAC;;;;MAI7BT,OAAO,CAACC,GAAG,CAACU,IAAI,CAACC,SAAS,CAACT,QAAQ,CAAC,CAAC;MACrC,IAAI,CAACb,WAAW,CAACuB,UAAU,CAACV,QAAQ,CAAC;MAErCH,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC;IACvB,CAAC;EA/B8C;;AAJpCf,WAAW,C;mBAAXA,WAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAX7B,WAAW,C;SAAXA,WAAW;EAAA8B,OAAA,EAAX9B,WAAW,CAAA+B;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}